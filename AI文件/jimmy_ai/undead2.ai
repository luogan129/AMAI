//===========================================================================
// 
// Jarman
// 
//   Warcraft III AI script
//   Generated by the Warcraft III World Editor
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    integer                 attackWave                 = 1
    integer                 nextDelay                  = 0
    integer                 awGold                     = 0
    integer                 awWood                     = 0

    // Conditions
    boolean                 gCond_Exp1_Needs_Hall      = false
    boolean                 gCond_Prosperous           = false
    boolean                 gCond_retreat              = false
    boolean                 gCond_Farmer               = false
    boolean                 gCond_wood                 = false
    boolean                 gCond_Prosperous2          = false
endglobals

//***************************************************************************
//*
//*  Utility Functions
//*
//***************************************************************************

//===========================================================================
function CheckLastCommand takes boolean pop returns integer
    local integer cmd = GetLastCommand()
    if (pop) then
        call PopLastCommand(  )
    endif
    return cmd
endfunction

//===========================================================================
function CheckLastCommandData takes boolean pop returns integer
    local integer data = GetLastData()
    if (pop) then
        call PopLastCommand(  )
    endif
    return data
endfunction

//===========================================================================
function TotalFoodProduced takes nothing returns integer
    return GetPlayerState(ai_player,PLAYER_STATE_RESOURCE_FOOD_CAP)
endfunction

//===========================================================================
function ExpansionNeeded takes nothing returns boolean
    return take_exp
endfunction

//===========================================================================
function BuildExpansion takes integer hallID, integer mineID returns nothing
    if (HallsCompleted(hallID)) then
        call SetBuildExpa( TownCount(hallID) + 1, mineID )
    endif
endfunction

//===========================================================================
function CurrentAttackWave takes nothing returns integer
    return attackWave
endfunction

//===========================================================================
function ResetAttackUnits takes nothing returns nothing
    set awGold = 0
    set awWood = 0
    call InitAssaultGroup(  )
endfunction

//===========================================================================
function AddAttackUnit takes integer minQty, integer maxQty, integer unitID returns nothing
    // Track attacking gold workers
    if (unitID == 'uaco') then
        set awGold = awGold + minQty
    endif

    // Track attacking wood workers
    if (unitID == 'ugho') then
        set awWood = awWood + minQty
    endif

    call SetAssaultGroup( minQty, maxQty, unitID )
endfunction

//***************************************************************************
//*
//*  Basic Options
//*
//***************************************************************************

//===========================================================================
function InitOptions takes nothing returns nothing
    call SetMeleeAI(  )
    call SetDefendPlayer( true )
    call SetRandomPaths( true )
    call SetTargetHeroes( true )
    call SetPeonsRepair( true )
    call SetHeroesFlee( true )
    call SetHeroesBuyItems( true )
    call SetUnitsFlee( true )
    call SetGroupsFlee( true )
    call SetWatchMegaTargets( true )
    call SetIgnoreInjured( true )
    call SetHeroesTakeItems( true )
    call SetSlowChopping( false )
    call SetCaptainChanges( true )
    call SetSmartArtillery( true )
endfunction

//***************************************************************************
//*
//*  Conditions
//*
//***************************************************************************

//===========================================================================
// Updates the values of all preset conditions
//===========================================================================
function UpdateConditions takes nothing returns nothing
    set gCond_Exp1_Needs_Hall = ( ( TownHasHall( ( TownWithMine(  ) + 1 ) ) == false ) and ( TownHasMine( ( TownWithMine(  ) + 1 ) ) == true ) )
    set gCond_Prosperous = ( ( ( GetGold(  ) >= 2000 ) and ( GetWood(  ) >= 1000 ) ) and ( GetMinesOwned(  ) >= 2 ) )
    set gCond_retreat = ( CaptainRetreating(  ) == false )
    set gCond_Farmer = ( ( ( GetUnitCountDone( 'unpl' ) > 0 ) or ( GetUnitCountDone( 'unp1' ) > 0 ) ) or ( GetUnitCountDone( 'unp2' ) > 0 ) )
    set gCond_wood = ( GetWood(  ) >= 300 )
    set gCond_Prosperous2 = ( ( ( GetGold(  ) >= 500 ) and ( FoodUsed(  ) >= 50 ) ) and ( ( GetMinesOwned(  ) >= 2 ) and ( ( CaptainReadinessHP(  ) >= 50 ) and ( GetUnitCountDone( 'ugol' ) >= 2 ) ) ) )
endfunction

//***************************************************************************
//*
//*  Heroes
//*
//***************************************************************************

//===========================================================================
// Stores hero ID and skills
//===========================================================================
function SetHero takes integer order, integer heroid returns nothing
    if (order == 1) then
        set hero_id = heroid
        if (heroid == 'Udea') then
            set skills1[ 1] = 'AUdc'
            set skills1[ 2] = 'AUau'
            set skills1[ 3] = 'AUdc'
            set skills1[ 4] = 'AUau'
            set skills1[ 5] = 'AUdc'
            set skills1[ 6] = 'AUan'
            set skills1[ 7] = 'AUau'
            set skills1[ 8] = 'AUdp'
            set skills1[ 9] = 'AUdp'
            set skills1[10] = 'AUdp'
        elseif (heroid == 'Ulic') then
            set skills1[ 1] = 'AUfn'
            set skills1[ 2] = 'AUdr'
            set skills1[ 3] = 'AUfn'
            set skills1[ 4] = 'AUdr'
            set skills1[ 5] = 'AUfn'
            set skills1[ 6] = 'AUdd'
            set skills1[ 7] = 'AUdr'
            set skills1[ 8] = 'AUfu'
            set skills1[ 9] = 'AUfu'
            set skills1[10] = 'AUfu'
        elseif (heroid == 'Ucrl') then
            set skills1[ 1] = 'AUcb'
            set skills1[ 2] = 'AUts'
            set skills1[ 3] = 'AUcb'
            set skills1[ 4] = 'AUts'
            set skills1[ 5] = 'AUcb'
            set skills1[ 6] = 'AUls'
            set skills1[ 7] = 'AUts'
            set skills1[ 8] = 'AUim'
            set skills1[ 9] = 'AUim'
            set skills1[10] = 'AUim'
        endif
    elseif (order == 2) then
        set hero_id2 = heroid
        if (heroid == 'Udea') then
            set skills2[ 1] = 'AUdc'
            set skills2[ 2] = 'AUau'
            set skills2[ 3] = 'AUdc'
            set skills2[ 4] = 'AUau'
            set skills2[ 5] = 'AUdc'
            set skills2[ 6] = 'AUan'
            set skills2[ 7] = 'AUau'
            set skills2[ 8] = 'AUdp'
            set skills2[ 9] = 'AUdp'
            set skills2[10] = 'AUdp'
        elseif (heroid == 'Ulic') then
            set skills2[ 1] = 'AUfu'
            set skills2[ 2] = 'AUfn'
            set skills2[ 3] = 'AUfn'
            set skills2[ 4] = 'AUfu'
            set skills2[ 5] = 'AUfn'
            set skills2[ 6] = 'AUdd'
            set skills2[ 7] = 'AUfu'
            set skills2[ 8] = 'AUdr'
            set skills2[ 9] = 'AUdr'
            set skills2[10] = 'AUdr'
        elseif (heroid == 'Ucrl') then
            set skills2[ 1] = 'AUim'
            set skills2[ 2] = 'AUts'
            set skills2[ 3] = 'AUim'
            set skills2[ 4] = 'AUts'
            set skills2[ 5] = 'AUim'
            set skills2[ 6] = 'AUls'
            set skills2[ 7] = 'AUts'
            set skills2[ 8] = 'AUcb'
            set skills2[ 9] = 'AUcb'
            set skills2[10] = 'AUcb'
        endif
    elseif (order == 3) then
        set hero_id3 = heroid
        if (heroid == 'Udea') then
            set skills3[ 1] = 'AUdc'
            set skills3[ 2] = 'AUau'
            set skills3[ 3] = 'AUdc'
            set skills3[ 4] = 'AUau'
            set skills3[ 5] = 'AUdc'
            set skills3[ 6] = 'AUan'
            set skills3[ 7] = 'AUau'
            set skills3[ 8] = 'AUdp'
            set skills3[ 9] = 'AUdp'
            set skills3[10] = 'AUdp'
        elseif (heroid == 'Ulic') then
            set skills3[ 1] = 'AUfu'
            set skills3[ 2] = 'AUdr'
            set skills3[ 3] = 'AUfu'
            set skills3[ 4] = 'AUdr'
            set skills3[ 5] = 'AUfu'
            set skills3[ 6] = 'AUdd'
            set skills3[ 7] = 'AUdr'
            set skills3[ 8] = 'AUfn'
            set skills3[ 9] = 'AUfn'
            set skills3[10] = 'AUfn'
        elseif (heroid == 'Ucrl') then
            set skills3[ 1] = 'AUim'
            set skills3[ 2] = 'AUts'
            set skills3[ 3] = 'AUim'
            set skills3[ 4] = 'AUts'
            set skills3[ 5] = 'AUim'
            set skills3[ 6] = 'AUls'
            set skills3[ 7] = 'AUts'
            set skills3[ 8] = 'AUcb'
            set skills3[ 9] = 'AUcb'
            set skills3[10] = 'AUcb'
        endif
    endif
endfunction

//===========================================================================
// Selects hero IDs for three possible heroes
//===========================================================================
function SelectHeroes takes nothing returns nothing
    local integer roll = GetRandomInt(1,100)
    call SetHero( 1, 'Udea' )
    call SetHero( 2, 'Ulic' )
    call SetHero( 3, 'Ucrl' )
endfunction

//===========================================================================
// Returns the hero skill for the given hero and level
//===========================================================================
function ChooseHeroSkill takes nothing returns integer
    local integer curHero = GetHeroId()
    local integer level = GetHeroLevelAI()

    if (level > max_hero_level) then
        set max_hero_level = level
    endif

    if (curHero == hero_id) then
        return skills1[level]
    elseif (curHero == hero_id2) then
        return skills2[level]
    elseif (curHero == hero_id3) then
        return skills3[level]
    endif
    return 0
endfunction

//***************************************************************************
//*
//*  Building and Harvesting
//*
//***************************************************************************

//===========================================================================
// Specifies building priorities for workers
//===========================================================================
function BuildPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    if (( ( GetMinesOwned(  ) >= 1 ) and ( GetTownUnitCount( 'ugol', 0, false ) == 0 ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'ugol', mine + 0 )
    endif
    if (( ( ( GetGold(  ) >= 225 ) and ( GetWood(  ) >= 220 ) ) and ( ( GetUnitCountDone( 'uaco' ) > 0 ) and ( GetMinesOwned(  ) == 0 ) ) )) then
        call BuildExpansion( 'unpl', 'ugol' )
    endif
    if (( ( ( ( GetUnitCountDone( 'uaco' ) > 0 ) and ( GetUnitCount( 'unpl' ) == 0 ) ) and ( GetUnitCount( 'unp1' ) == 0 ) ) and ( GetUnitCount( 'unp2' ) == 0 ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'unpl', -1 )
    endif
    if (gCond_Farmer) then
        call SetBuildAll( BUILD_UNIT, 1, 'uaco', -1 )
    endif
    if (( ( GetUnitCountDone( 'uaco' ) > 0 ) and ( ( ( GetUnitCountDone( 'unpl' ) > 0 ) or ( GetUnitCountDone( 'unp1' ) > 0 ) ) or ( GetUnitCountDone( 'unp2' ) > 0 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 2, 'uaco', -1 )
    endif
    if (( ( GetUnitCountDone( 'uaco' ) > 1 ) and ( ( ( GetUnitCountDone( 'unpl' ) > 0 ) or ( GetUnitCountDone( 'unp1' ) > 0 ) ) or ( GetUnitCountDone( 'unp2' ) > 0 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 3, 'uaco', -1 )
    endif
    if (( ( TotalFoodProduced(  ) >= 2 ) and ( GetUnitCountDone( 'usep' ) > 0 ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'ugho', -1 )
    endif
    if (( ( GetUnitCountDone( 'uaco' ) > 2 ) and ( ( ( GetUnitCountDone( 'unpl' ) > 0 ) or ( GetUnitCountDone( 'unp1' ) > 0 ) ) or ( GetUnitCountDone( 'unp2' ) > 0 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 4, 'uaco', -1 )
    endif
    if (( GetUnitCountDone( 'uaco' ) > 0 )) then
        call SetBuildAll( BUILD_UNIT, 1, 'usep', -1 )
        call SetBuildAll( BUILD_UNIT, 1, 'uzig', -1 )
        call SetBuildAll( BUILD_UNIT, 1, 'ugrv', -1 )
    endif
    if (( ( GetUnitCountDone( 'uaco' ) > 3 ) and ( ( ( GetUnitCountDone( 'unpl' ) > 0 ) or ( GetUnitCountDone( 'unp1' ) > 0 ) ) or ( GetUnitCountDone( 'unp2' ) > 0 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 5, 'uaco', -1 )
    endif
    if (( ( GetUnitCount( 'uzig' ) > 0 ) or ( ( GetUnitCount( 'uzg2' ) > 0 ) or ( TotalFoodProduced(  ) >= 5 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'uaod', -1 )
    endif
    if (( ( GetGold(  ) >= 200 ) and ( GetWood(  ) >= 50 ) )) then
        call SetBuildAll( BUILD_UNIT, 2, 'usep', -1 )
    endif
    if (( ( GetUnitCountDone( 'uaco' ) > 4 ) and ( ( ( GetUnitCountDone( 'unpl' ) > 0 ) or ( GetUnitCountDone( 'unp1' ) > 0 ) ) or ( GetUnitCountDone( 'unp2' ) > 0 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 6, 'uaco', -1 )
    endif
    if (( GetUnitCountDone( 'ugho' ) == 1 )) then
        call SetBuildAll( BUILD_UNIT, 2, 'ugho', -1 )
    endif
    if (( ( GetUnitCount( 'uzig' ) > 0 ) or ( GetUnitCount( 'uzg2' ) > 0 ) )) then
        call SetBuildAll( BUILD_UNIT, 2, 'uzig', -1 )
        call SetBuildAll( BUILD_UNIT, 1, 'utom', 0 )
    endif
    if (( GetUnitCountDone( 'ugho' ) == 2 )) then
        call SetBuildAll( BUILD_UNIT, 3, 'ugho', -1 )
    endif
    if (( ( TotalFoodProduced(  ) >= 3 ) and ( GetUnitCountDone( 'ugho' ) >= 2 ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'ucry', -1 )
    endif
    if (( ( GetUnitCount( 'uzig' ) > 0 ) or ( ( GetUnitCount( 'uzg2' ) > 0 ) or ( TotalFoodProduced(  ) >= 5 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id, -1 )
    endif
    if (( ( TotalFoodProduced(  ) >= 3 ) and ( GetUnitCountDone( 'ugho' ) >= 3 ) )) then
        call SetBuildAll( BUILD_UNIT, 2, 'ucry', -1 )
    endif
    if (( GetUnitCountDone( 'uzig' ) > 0 )) then
        call SetBuildAll( BUILD_UNIT, 1, 'uzg2', -1 )
    endif
    if (( GetUnitCountDone( 'uaco' ) > 0 )) then
        call SetBuildAll( BUILD_UNIT, 3, 'uzig', -1 )
    endif
    if (( GetUnitCountDone( 'ucry' ) >= 2 )) then
        call SetBuildAll( BUILD_UNIT, 3, 'ucry', -1 )
        call SetBuildAll( BUILD_UNIT, 4, 'ucry', -1 )
    endif
    if (( GetUnitCount( 'unp1' ) > 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rura', -1 )
    endif
    if (( GetWood(  ) < 500 )) then
        call SetBuildAll( BUILD_UNIT, 4, 'ugho', -1 )
    endif
    if (( TownThreatened(  ) == false )) then
        call SetBuildAll( BUILD_UNIT, 1, 'unp1', -1 )
    endif
    if (( GetUnitCountDone( 'unp1' ) > 0 )) then
        call SetBuildAll( BUILD_UNIT, 1, 'unp2', -1 )
    endif
    if (( ( ( TownThreatened(  ) == true ) and ( GetUnitCountDone( 'uzig' ) > 0 ) ) and ( GetUnitCountDone( 'uzg2' ) == 1 ) )) then
        call SetBuildAll( BUILD_UNIT, 2, 'uzg2', -1 )
    endif
    if (( ( ( TownThreatened(  ) == true ) and ( GetUnitCountDone( 'uzig' ) > 0 ) ) and ( ( GetUnitCountDone( 'uzg2' ) == 2 ) and ( GetWood(  ) >= 300 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 3, 'uzg2', -1 )
    endif
    if (( ( ( TownThreatened(  ) == true ) and ( GetUnitCountDone( 'uzig' ) > 0 ) ) and ( ( GetUnitCountDone( 'uzg2' ) == 3 ) and ( GetWood(  ) >= 300 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 4, 'uzg2', -1 )
    endif
    if (( ( TotalFoodProduced(  ) < 100 ) and ( FoodUsed(  ) >= 30 ) )) then
        call SetBuildAll( BUILD_UNIT, 4, 'uzig', -1 )
    endif
    if (( ( TotalFoodProduced(  ) < 100 ) and ( FoodUsed(  ) >= 40 ) )) then
        call SetBuildAll( BUILD_UNIT, 5, 'uzig', -1 )
    endif
    if (( ( TotalFoodProduced(  ) < 100 ) and ( FoodUsed(  ) >= 50 ) )) then
        call SetBuildAll( BUILD_UNIT, 6, 'uzig', -1 )
    endif
    if (( ( TotalFoodProduced(  ) < 100 ) and ( FoodUsed(  ) >= 60 ) )) then
        call SetBuildAll( BUILD_UNIT, 7, 'uzig', -1 )
    endif
    if (( ( TotalFoodProduced(  ) < 100 ) and ( FoodUsed(  ) >= 70 ) )) then
        call SetBuildAll( BUILD_UNIT, 8, 'uzig', -1 )
    endif
    if (( ( TotalFoodProduced(  ) < 100 ) and ( FoodUsed(  ) >= 80 ) )) then
        call SetBuildAll( BUILD_UNIT, 9, 'uzig', -1 )
    endif
    if (( ( ( GetGold(  ) >= 2000 ) and ( GetWood(  ) >= 1000 ) ) and ( GetUnitCountDone( 'uzig' ) > 0 ) )) then
        call SetBuildAll( BUILD_UNIT, 5, 'uzg2', -1 )
        call SetBuildAll( BUILD_UNIT, 6, 'uzg2', -1 )
        call SetBuildAll( BUILD_UNIT, 7, 'uzg2', -1 )
        call SetBuildAll( BUILD_UNIT, 8, 'uzg2', -1 )
        call SetBuildAll( BUILD_UNIT, 9, 'uzg2', -1 )
        call SetBuildAll( BUILD_UNIT, 10, 'uzg2', -1 )
        call SetBuildAll( BUILD_UNIT, 11, 'uzg2', -1 )
        call SetBuildAll( BUILD_UNIT, 12, 'uzg2', -1 )
    endif
    if (( GetWood(  ) < 500 )) then
        call SetBuildAll( BUILD_UNIT, 5, 'ugho', -1 )
    endif
    if (( ( TownThreatened(  ) == true ) and ( ( ( GetWood(  ) < 300 ) and ( GetGold(  ) > 300 ) ) and ( ( GetUnitCountDone( 'ugho' ) == 5 ) and ( GetUnitCountDone( 'ugol' ) < 2 ) ) ) )) then
        call SetBuildAll( BUILD_UNIT, 6, 'ugho', -1 )
    endif
    if (( ( TownThreatened(  ) == true ) and ( ( ( GetWood(  ) < 300 ) and ( GetGold(  ) > 300 ) ) and ( ( GetUnitCountDone( 'ugho' ) == 6 ) and ( GetUnitCountDone( 'ugol' ) < 2 ) ) ) )) then
        call SetBuildAll( BUILD_UNIT, 7, 'ugho', -1 )
    endif
    if (( ( TownThreatened(  ) == true ) and ( ( ( GetWood(  ) < 300 ) and ( GetGold(  ) > 300 ) ) and ( ( GetUnitCountDone( 'ugho' ) == 7 ) and ( GetUnitCountDone( 'ugol' ) < 2 ) ) ) )) then
        call SetBuildAll( BUILD_UNIT, 8, 'ugho', -1 )
    endif
    if (( ( TownThreatened(  ) == true ) and ( ( ( GetWood(  ) < 300 ) and ( GetGold(  ) > 300 ) ) and ( ( GetUnitCountDone( 'ugho' ) == 8 ) and ( GetUnitCountDone( 'ugol' ) < 2 ) ) ) )) then
        call SetBuildAll( BUILD_UNIT, 9, 'ugho', -1 )
    endif
    if (( ( TownThreatened(  ) == true ) and ( ( ( GetWood(  ) < 300 ) and ( GetGold(  ) > 300 ) ) and ( ( GetUnitCountDone( 'ugho' ) == 9 ) and ( GetUnitCountDone( 'ugol' ) < 2 ) ) ) )) then
        call SetBuildAll( BUILD_UNIT, 10, 'ugho', -1 )
    endif
    if (( GetUnitCountDone( 'ucry' ) >= 4 )) then
        call SetBuildAll( BUILD_UNIT, 5, 'ucry', -1 )
        call SetBuildAll( BUILD_UNIT, 6, 'ucry', -1 )
    endif
    if (( ( ( GetMinesOwned(  ) <= 2 ) and ( TownThreatened(  ) == false ) ) and ( ( GetUnitCountDone( 'ucry' ) >= 4 ) and ( ( GetUnitCountDone( 'uaco' ) >= 5 ) and ( CaptainReadinessHP(  ) >= 80 ) ) ) )) then
        call BuildExpansion( 'unpl', 'ugol' )
    endif
    if (( ( ( GetMinesOwned(  ) <= 2 ) and ( TownThreatened(  ) == false ) ) and ( ( GetUnitCountDone( 'ucry' ) >= 4 ) and ( ( GetUnitCountDone( 'uaco' ) >= 5 ) and ( GetUnitCountDone( 'ufro' ) > 0 ) ) ) )) then
        call BuildExpansion( 'unpl', 'ugol' )
    endif
    if (( GetMinesOwned(  ) == 0 )) then
        call BuildExpansion( 'unpl', 'ugol' )
    endif
    if (( ( GetMinesOwned(  ) >= 2 ) and ( GetTownUnitCount( 'ugol', 1, false ) == 0 ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'ugol', mine + 1 )
    endif
    if (gCond_Exp1_Needs_Hall) then
        call SetBuildAll( BUILD_UNIT, 1, 'unpl', mine + 1 )
    endif
    if (( ( ( ( ( TownThreatened(  ) == true ) and ( GetGold(  ) >= 500 ) ) and ( GetWood(  ) >= 200 ) ) and ( GetMinesOwned(  ) >= 2 ) ) and ( GetTownUnitCount( 'unpl', 1, true ) > 0 ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'unp1', mine + 1 )
    endif
    if (( ( GetUnitCountDone( 'uaco' ) == 6 ) and ( ( GetMinesOwned(  ) >= 2 ) and ( ( GetUnitCountDone( 'unp2' ) > 0 ) or ( ( GetUnitCountDone( 'unp1' ) > 0 ) or ( GetUnitCountDone( 'unpl' ) > 0 ) ) ) ) )) then
        call SetBuildAll( BUILD_UNIT, 7, 'uaco', -1 )
    endif
    if (( ( GetUnitCountDone( 'uaco' ) == 7 ) and ( ( GetMinesOwned(  ) >= 2 ) and ( ( GetUnitCountDone( 'unp2' ) > 0 ) or ( ( GetUnitCountDone( 'unp1' ) > 0 ) or ( GetUnitCountDone( 'unpl' ) > 0 ) ) ) ) )) then
        call SetBuildAll( BUILD_UNIT, 8, 'uaco', -1 )
    endif
    if (( ( GetUnitCountDone( 'uaco' ) == 8 ) and ( ( GetMinesOwned(  ) >= 2 ) and ( ( GetUnitCountDone( 'unp2' ) > 0 ) or ( ( GetUnitCountDone( 'unp1' ) > 0 ) or ( GetUnitCountDone( 'unpl' ) > 0 ) ) ) ) )) then
        call SetBuildAll( BUILD_UNIT, 9, 'uaco', -1 )
    endif
    if (( ( GetUnitCountDone( 'uaco' ) == 9 ) and ( ( GetMinesOwned(  ) >= 2 ) and ( ( GetUnitCountDone( 'unp2' ) > 0 ) or ( ( GetUnitCountDone( 'unp1' ) > 0 ) or ( GetUnitCountDone( 'unpl' ) > 0 ) ) ) ) )) then
        call SetBuildAll( BUILD_UNIT, 10, 'uaco', -1 )
    endif
    if (( GetUnitCount( 'unp1' ) > 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rucr', -1 )
    endif
    if (( ( GetUnitCountDone( 'ufro' ) <= 2 ) and ( ( FoodUsed(  ) <= 80 ) and ( GetUnitCountDone( 'ucry' ) >= 6 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 7, 'ucry', -1 )
        call SetBuildAll( BUILD_UNIT, 8, 'ucry', -1 )
    endif
    if (( ( GetUnitCountDone( 'Udea' ) > 0 ) or ( GetUnitCountDone( 'uaod' ) > 1 ) )) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id2, -1 )
    endif
    if (( GetUnitCountDone( 'usep' ) > 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Ruwb', -1 )
    endif
    if (( GetUnitCountDone( 'uaco' ) > 0 )) then
        call SetBuildAll( BUILD_UNIT, 1, 'uslh', -1 )
        call SetBuildAll( BUILD_UNIT, 1, 'utod', -1 )
    endif
    if (gCond_wood) then
        call SetBuildAll( BUILD_UNIT, 2, 'uslh', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'utod', -1 )
    endif
    if (( GetWood(  ) >= 200 )) then
        call SetBuildAll( BUILD_UNIT, 1, 'usap', -1 )
    endif
    if (( ( GetUnitCount( 'unp2' ) > 0 ) and ( GetWood(  ) >= 300 ) )) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rura', -1 )
    endif
    if (( ( GetUnitCountDone( 'unp2' ) > 0 ) and ( ( GetUnitCountDone( 'usap' ) > 0 ) and ( GetGold(  ) >= 500 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'ubon', -1 )
    endif
    if (( ( GetUnitCountDone( 'unp2' ) > 0 ) and ( ( GetUnitCountDone( 'usap' ) > 0 ) and ( GetUnitCount( 'ubon' ) > 0 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 2, 'ubon', -1 )
    endif
    if (( ( GetGold(  ) >= 1000 ) and ( ( GetWood(  ) >= 500 ) and ( GetMinesOwned(  ) >= 2 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 3, 'usep', -1 )
        call SetBuildAll( BUILD_UNIT, 4, 'usep', -1 )
    endif
    if (( GetUnitCountDone( 'uslh' ) > 0 )) then
        call SetBuildAll( BUILD_UNIT, 1, 'uobs', -1 )
    endif
    if (( ( GetUnitCountDone( 'ufro' ) == 0 ) and ( GetUnitCount( 'unec' ) <= 6 ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'uban', -1 )
    endif
    if (( ( GetUnitCount( 'uban' ) <= 5 ) and ( GetUnitCountDone( 'ufro' ) > 0 ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'unec', -1 )
    endif
    if (( GetUnitCountDone( 'uslh' ) > 0 )) then
        call SetBuildAll( BUILD_UNIT, 2, 'uobs', -1 )
    endif
    if (( GetUnitCount( 'uban' ) > 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Ruba', -1 )
    endif
    if (( GetUnitCount( 'unec' ) > 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rune', -1 )
    endif
    if (( ( GetUnitCount( 'unp2' ) > 0 ) and ( GetWood(  ) >= 300 ) )) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rucr', -1 )
    endif
    if (( GetUnitCountDone( 'ubon' ) > 0 )) then
        call SetBuildAll( BUILD_UNIT, 1, 'ufro', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'ufro', -1 )
    endif
    if (( ( ( GetUnitCountDone( 'Udea' ) > 0 ) and ( GetUnitCountDone( 'Ulic' ) > 0 ) ) or ( GetUnitCountDone( 'uaod' ) > 1 ) )) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id3, -1 )
    endif
    if (( ( ( GetMinesOwned(  ) > 1 ) and ( GetUnitCount( 'utom' ) < 2 ) ) and ( ( GetUnitCountDone( 'ugol' ) > 1 ) and ( TownThreatened(  ) == true ) ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'utom', mine + 1 )
    endif
    if (( ( GetUnitCountDone( 'ufro' ) > 0 ) and ( GetUnitCountDone( 'usep' ) > 0 ) )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rubu', -1 )
    endif
    if (( ( GetUnitCountDone( 'ufro' ) == 0 ) and ( ( FoodUsed(  ) <= 80 ) and ( GetUnitCountDone( 'uobs' ) >= 2 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 1, 'umtw', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'umtw', -1 )
    endif
    if (( ( GetUnitCountDone( 'unp2' ) > 0 ) and ( ( GetUpgradeLevel( 'Ruba' ) > 0 ) and ( ( GetUnitCountDone( 'ufro' ) == 0 ) or ( GetUnitCountDone( 'unec' ) >= 6 ) ) ) )) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Ruba', -1 )
    endif
    if (( ( GetUnitCountDone( 'unp2' ) > 0 ) and ( ( GetUpgradeLevel( 'Rune' ) > 0 ) and ( ( GetUnitCountDone( 'ufro' ) > 0 ) or ( GetUnitCountDone( 'uban' ) >= 6 ) ) ) )) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rune', -1 )
    endif
    if (( ( GetUnitCountDone( 'ufro' ) == 0 ) and ( GetUnitCount( 'unec' ) <= 5 ) )) then
        call SetBuildAll( BUILD_UNIT, 2, 'uban', -1 )
    endif
    if (( ( GetUnitCount( 'uban' ) <= 4 ) and ( GetUnitCountDone( 'ufro' ) > 0 ) )) then
        call SetBuildAll( BUILD_UNIT, 2, 'unec', -1 )
    endif
    if (gCond_wood) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rura', -1 )
    endif
    if (( GetUnitCount( 'umtw' ) > 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Ruex', -1 )
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rupc', -1 )
    endif
    if (( ( ( GetUnitCountDone( 'ufro' ) == 0 ) and ( GetUnitCount( 'unec' ) <= 4 ) ) and ( GetUnitCountDone( 'uban' ) >= 2 ) )) then
        call SetBuildAll( BUILD_UNIT, 3, 'uban', -1 )
    endif
    if (( ( GetUnitCountDone( 'unec' ) >= 2 ) and ( ( GetUnitCountDone( 'ufro' ) > 0 ) and ( GetUnitCount( 'uban' ) <= 3 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 3, 'unec', -1 )
    endif
    if (( ( ( GetUnitCountDone( 'ufro' ) == 0 ) and ( GetUnitCount( 'unec' ) <= 3 ) ) and ( GetUnitCountDone( 'uban' ) >= 2 ) )) then
        call SetBuildAll( BUILD_UNIT, 4, 'uban', -1 )
    endif
    if (( ( GetUnitCountDone( 'unec' ) >= 2 ) and ( ( GetUnitCountDone( 'ufro' ) > 0 ) and ( GetUnitCount( 'uban' ) <= 2 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 4, 'unec', -1 )
    endif
    if (( ( GetUnitCountDone( 'ubon' ) > 0 ) and ( GetUnitCountDone( 'ufro' ) >= 2 ) )) then
        call SetBuildAll( BUILD_UNIT, 3, 'ufro', -1 )
        call SetBuildAll( BUILD_UNIT, 4, 'ufro', -1 )
    endif
    if (gCond_wood) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rucr', -1 )
    endif
    if (( ( GetUnitCountDone( 'unp2' ) > 0 ) and ( GetUnitCount( 'unec' ) > 0 ) )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rusm', -1 )
    endif
    if (( GetUnitCount( 'unec' ) > 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rusl', -1 )
    endif
    if (( GetUnitCountDone( 'ubon' ) > 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rufb', -1 )
    endif
    if (( ( ( GetUnitCountDone( 'ufro' ) == 0 ) and ( GetUnitCount( 'unec' ) <= 2 ) ) and ( GetUnitCountDone( 'uban' ) >= 4 ) )) then
        call SetBuildAll( BUILD_UNIT, 5, 'uban', -1 )
    endif
    if (( ( GetUnitCountDone( 'unec' ) >= 4 ) and ( ( GetUnitCountDone( 'ufro' ) > 0 ) and ( GetUnitCount( 'uban' ) <= 1 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 5, 'unec', -1 )
    endif
    if (( ( ( GetUnitCountDone( 'ufro' ) == 0 ) and ( GetUnitCount( 'unec' ) <= 1 ) ) and ( GetUnitCountDone( 'uban' ) >= 4 ) )) then
        call SetBuildAll( BUILD_UNIT, 6, 'uban', -1 )
    endif
    if (( ( GetUnitCountDone( 'unec' ) >= 4 ) and ( ( GetUnitCountDone( 'ufro' ) > 0 ) and ( GetUnitCount( 'uban' ) == 0 ) ) )) then
        call SetBuildAll( BUILD_UNIT, 6, 'unec', -1 )
    endif
    if (( ( GetWood(  ) > 500 ) and ( GetUnitCount( 'ugho' ) == 3 ) )) then
        call SetBuildAll( BUILD_UNIT, 9, 'ucry', -1 )
    endif
    if (( ( GetWood(  ) > 500 ) and ( GetUnitCount( 'ugho' ) <= 4 ) )) then
        call SetBuildAll( BUILD_UNIT, 7, 'unec', -1 )
    endif
    if (gCond_Prosperous) then
        call BuildExpansion( 'unpl', 'ugol' )
        call SetBuildAll( BUILD_UNIT, 1, 'uzig', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 2, 'uzig', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 1, 'uzg2', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 2, 'uzg2', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 1, 'usep', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 2, 'usep', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 1, 'uaod', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 2, 'uaod', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 1, 'ubon', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 2, 'ubon', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 1, 'utod', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 2, 'utod', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 3, 'uzig', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 4, 'uzig', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 3, 'uzg2', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 4, 'uzg2', mine + 1 )
        call SetBuildAll( BUILD_UNIT, 2, 'utom', mine + 1 )
    endif
    if (gCond_wood) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Ruar', -1 )
        call SetBuildAll( BUILD_UPGRADE, 2, 'Ruar', -1 )
        call SetBuildAll( BUILD_UPGRADE, 3, 'Ruar', -1 )
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rume', -1 )
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rume', -1 )
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rume', -1 )
    endif
    if (gCond_Prosperous) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rugf', -1 )
        call SetBuildAll( BUILD_UPGRADE, 1, 'Ruac', -1 )
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rupm', -1 )
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rusp', -1 )
    endif
endfunction

//===========================================================================
// Specifies harvesting priorities for workers
//===========================================================================
function HarvestPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    local integer allGold = GetUnitCountDone('uaco')
    local integer allWood = GetUnitCountDone('ugho')
    local integer numWorkers
    if (( GetTownUnitCount( 'ugol', 0, true ) > 0 )) then
        set numWorkers = 5
        call HarvestGold( mine + 0, numWorkers )
    endif
    if (( GetTownUnitCount( 'ugol', 1, true ) > 0 )) then
        set numWorkers = 5
        call HarvestGold( mine + 1, numWorkers )
    endif
    if (( GetTownUnitCount( 'ugol', 2, true ) > 0 )) then
        set numWorkers = 5
        call HarvestGold( mine + 2, numWorkers )
    endif
    if (( GetTownUnitCount( 'ugol', 3, true ) > 0 )) then
        set numWorkers = 5
        call HarvestGold( mine + 3, numWorkers )
    endif
    if (( GetTownUnitCount( 'ugol', 4, true ) > 0 )) then
        set numWorkers = 5
        call HarvestGold( mine + 4, numWorkers )
    endif
    if (( GetTownUnitCount( 'ugol', 5, true ) > 0 )) then
        set numWorkers = 5
        call HarvestGold( mine + 5, numWorkers )
    endif
    if (( GetTownUnitCount( 'ugol', 6, true ) > 0 )) then
        set numWorkers = 5
        call HarvestGold( mine + 6, numWorkers )
    endif
    if (( GetTownUnitCount( 'ugol', 7, true ) > 0 )) then
        set numWorkers = 5
        call HarvestGold( mine + 7, numWorkers )
    endif
    if (( GetTownUnitCount( 'ugol', 8, true ) > 0 )) then
        set numWorkers = 5
        call HarvestGold( mine + 8, numWorkers )
    endif
    if (( GetWood(  ) < 500 )) then
        set numWorkers = allWood
        if (numWorkers > 0) then
            call HarvestWood( mine, numWorkers )
        endif
    endif
    set numWorkers = allWood - awWood
    if (numWorkers > 0) then
        call HarvestWood( mine + 0, numWorkers )
    endif
    set numWorkers = allWood - awWood
    if (numWorkers > 0) then
        call HarvestWood( 0, numWorkers )
    endif
    set numWorkers = allWood - awWood
    if (numWorkers > 0) then
        call HarvestWood( mine, numWorkers )
    endif
endfunction

//===========================================================================
// Determines all building and harvesting assignments for workers
//===========================================================================
function WorkerAssignment takes nothing returns nothing
    loop
        call UpdateConditions(  )

        // Harvesting
        call ClearHarvestAI(  )
        call HarvestPriorities(  )

        // Building
        call InitBuildArray(  )
        call BuildPriorities(  )

        call Sleep( 2 )
    endloop
endfunction

//***************************************************************************
//*
//*  Attacking
//*
//***************************************************************************

//===========================================================================
// Returns true if the minimum forces for an attack exist
//===========================================================================
function HaveMinimumAttackers takes nothing returns boolean
    local integer count

    // Check for attack wave limit
    if (attackWave > 1) then
        return false
    endif

    // Attack Group: Smallest units
    // No specific minimums exist, checking for at least one unit
    set count = 0
    set count = count + GetUnitCountDone('Udea')
    set count = count + GetUnitCountDone('Ulic')
    set count = count + GetUnitCountDone('Ucrl')
    set count = count + GetUnitCountDone('Udre')
    set count = count + GetUnitCountDone(hero_id)
    set count = count + GetUnitCountDone(hero_id2)
    set count = count + GetUnitCountDone(hero_id3)
    if (count < 1) then
        return false
    endif
    return true
endfunction

//===========================================================================
// Assigns units to attack based on the given attack group
//===========================================================================
function PrepareAttackGroup takes integer groupID returns nothing
    local integer all

    // Attack Group #1: All Units
    if (groupID == 1) then
        if (gCond_retreat) then
            set all = GetUnitCountDone( hero_id )
            call AddAttackUnit( all, all, hero_id )
            set all = GetUnitCountDone( hero_id2 )
            call AddAttackUnit( all, all, hero_id2 )
            set all = GetUnitCountDone( 'ucry' )
            call AddAttackUnit( all, all, 'ucry' )
            set all = GetUnitCountDone( 'ufro' )
            call AddAttackUnit( all, all, 'ufro' )
            set all = GetUnitCountDone( 'uobs' )
            call AddAttackUnit( all, all, 'uobs' )
            set all = GetUnitCountDone( 'unec' )
            call AddAttackUnit( all, all, 'unec' )
            set all = GetUnitCountDone( hero_id3 )
            call AddAttackUnit( all, all, hero_id3 )
            set all = GetUnitCountDone( 'uban' )
            call AddAttackUnit( all, all, 'uban' )
            set all = GetUnitCountDone( 'uabo' )
            call AddAttackUnit( all, all, 'uabo' )
            set all = GetUnitCountDone( 'ugar' )
            call AddAttackUnit( all, all, 'ugar' )
        endif
        if (( ( CaptainRetreating(  ) == false ) and ( FoodUsed(  ) >= 80 ) )) then
            set all = GetUnitCountDone( 'umtw' )
            call AddAttackUnit( all, all, 'umtw' )
        endif
        if (gCond_retreat) then
            set all = GetUnitCountDone( 'ushd' )
            call AddAttackUnit( all, all, 'ushd' )
            set all = GetUnitCountDone( 'ubsp' )
            call AddAttackUnit( all, all, 'ubsp' )
        endif
        if (( ( CaptainRetreating(  ) == false ) and ( GetWood(  ) >= 500 ) )) then
            set all = GetUnitCountDone( 'ugho' )
            set all = all - 5
            if (all < 0) then
                set all = 0
            endif
            call AddAttackUnit( all, all, 'ugho' )
        endif
        if (gCond_retreat) then
            set all = GetUnitCountDone( 'hfoo' )
            call AddAttackUnit( all, all, 'hfoo' )
            set all = GetUnitCountDone( 'hkni' )
            call AddAttackUnit( all, all, 'hkni' )
            set all = GetUnitCountDone( 'ogru' )
            call AddAttackUnit( all, all, 'ogru' )
            set all = GetUnitCountDone( 'orai' )
            call AddAttackUnit( all, all, 'orai' )
            set all = GetUnitCountDone( 'otau' )
            call AddAttackUnit( all, all, 'otau' )
            set all = GetUnitCountDone( 'edoc' )
            call AddAttackUnit( all, all, 'edoc' )
            set all = GetUnitCountDone( 'esen' )
            call AddAttackUnit( all, all, 'esen' )
            set all = GetUnitCountDone( 'edcm' )
            call AddAttackUnit( all, all, 'edcm' )
        endif

        // Attack Group #2: Smallest units
    elseif (groupID == 2) then
        set all = GetUnitCountDone( 'Udea' )
        call AddAttackUnit( all, all, 'Udea' )
        set all = GetUnitCountDone( 'Ulic' )
        call AddAttackUnit( all, all, 'Ulic' )
        set all = GetUnitCountDone( 'Ucrl' )
        call AddAttackUnit( all, all, 'Ucrl' )
        set all = GetUnitCountDone( 'Udre' )
        call AddAttackUnit( all, all, 'Udre' )
        set all = GetUnitCountDone( hero_id )
        call AddAttackUnit( all, all, hero_id )
        set all = GetUnitCountDone( hero_id2 )
        call AddAttackUnit( all, all, hero_id2 )
        set all = GetUnitCountDone( hero_id3 )
        call AddAttackUnit( all, all, hero_id3 )

    endif
endfunction

//===========================================================================
// Prepares an attack group based on the current attack wave
//===========================================================================
function PrepareForces takes nothing returns nothing
    if (attackWave == 1) then
        call PrepareAttackGroup( 1 )
    endif
endfunction

//===========================================================================
// Sleep delays for each attack wave
//===========================================================================
function AttackWaveDelay takes integer inWave returns nothing
    if (inWave < nextDelay) then
        return
    endif

    set nextDelay = inWave + 1
endfunction

//===========================================================================
// Advances attack wave counter
//===========================================================================
function AttackWaveUpdate takes nothing returns nothing
    call AttackWaveDelay( attackWave )
    set attackWave = attackWave + 1
    if (attackWave > 1) then
        set attackWave = 1
        set nextDelay = attackWave + 1
    endif
endfunction

//===========================================================================
// Basic attack functionality
//===========================================================================
function AttackTarget takes unit target, boolean addAlliance returns nothing
    if (target == null) then
        return
    endif
    if (addAlliance) then
        call SetAllianceTarget( target )
    endif
    call FormGroup( 3, true )
    call AttackMoveKillA( target )
    if (not addAlliance) then
        call SetAllianceTarget( null )
    endif
endfunction

//===========================================================================
// Initiates an attack based on target priorities
//===========================================================================
function LaunchAttack takes nothing returns nothing
    local unit target = null
    local boolean setAlly = true

    // Don't launch any attack while town is threatened
    if (TownThreatened()) then
        call Sleep( 2 )
        return
    endif

    // Target Priority #1
    if (( ( ( ( ExpansionNeeded(  ) == true ) and ( TownThreatened(  ) == false ) ) and ( GetMinesOwned(  ) < 2 ) ) or ( GetMinesOwned(  ) == 0 ) )) then
        if (target == null) then
            set target = GetExpansionFoe()
            if (target != null) then
                set take_exp = false
            endif
        endif

        // Target Priority #2
    endif
    if (target == null) then
        set target = GetAllianceTarget()
        if (target != null) then
            set setAlly = false
        endif
    endif

    // Target Priority #3
    if (( ( FoodUsed(  ) >= 50 ) and ( ( CaptainReadinessHP(  ) >= 50 ) and ( GetMinesOwned(  ) < 2 ) ) )) then
        if (target == null) then
            set target = GetEnemyExpansion()
        endif

        // Target Priority #4
    endif
    if (( CaptainReadinessHP(  ) >= 50 )) then
        if (target == null) then
            set target = GetMegaTarget()
        endif

        // Target Priority #5
    endif
    if (( GetUnitCount( 'ugol' ) == 0 )) then
        if (target == null) then
            set target = GetEnemyExpansion()
            if (target == null) then
                call StartGetEnemyBase(  )
                loop
                    exitwhen (not WaitGetEnemyBase())
                    call SuicideSleep( 1 )
                endloop
                set target = GetEnemyBase()
            endif
        endif

        // Target Priority #6
    endif
    if (( ( GetUnitCount( 'uaco' ) == 0 ) and ( ( GetUnitCount( 'unpl' ) == 0 ) and ( ( GetUnitCount( 'unp1' ) == 0 ) and ( GetUnitCount( 'unp2' ) == 0 ) ) ) )) then
        if (target == null) then
            set target = GetEnemyExpansion()
            if (target == null) then
                call StartGetEnemyBase(  )
                loop
                    exitwhen (not WaitGetEnemyBase())
                    call SuicideSleep( 1 )
                endloop
                set target = GetEnemyBase()
            endif
        endif

        // Target Priority #7
    endif
    if (( ( FoodUsed(  ) >= 80 ) and ( CaptainReadinessHP(  ) >= 50 ) )) then
        if (target == null) then
            set target = GetEnemyExpansion()
            if (target == null) then
                call StartGetEnemyBase(  )
                loop
                    exitwhen (not WaitGetEnemyBase())
                    call SuicideSleep( 1 )
                endloop
                set target = GetEnemyBase()
            endif
        endif

        // Target Priority #8
    endif
    if (( ( GetUnitCountDone( 'ucry' ) >= 6 ) and ( ( CaptainReadinessHP(  ) >= 50 ) and ( GetUnitCountDone( 'unp2' ) == 0 ) ) )) then
        if (target == null) then
            set target = GetEnemyExpansion()
            if (target == null) then
                call StartGetEnemyBase(  )
                loop
                    exitwhen (not WaitGetEnemyBase())
                    call SuicideSleep( 1 )
                endloop
                set target = GetEnemyBase()
            endif
        endif

        // Target Priority #9
    endif
    if (gCond_Prosperous2) then
        if (target == null) then
            set target = GetEnemyExpansion()
            if (target == null) then
                call StartGetEnemyBase(  )
                loop
                    exitwhen (not WaitGetEnemyBase())
                    call SuicideSleep( 1 )
                endloop
                set target = GetEnemyBase()
            endif
        endif

        // Target Priority #10
    endif
    if (( ( GetMinesOwned(  ) >= 2 ) and ( GetUnitCountDone( 'ugol' ) <= 1 ) )) then
        if (target == null) then
            set target = GetEnemyExpansion()
            if (target == null) then
                call StartGetEnemyBase(  )
                loop
                    exitwhen (not WaitGetEnemyBase())
                    call SuicideSleep( 1 )
                endloop
                set target = GetEnemyBase()
            endif
        endif

        // Target Priority #11
    endif
    if (( ( ( FoodUsed(  ) >= 50 ) and ( GetUpgradeLevel( 'Ruwb' ) > 0 ) ) and ( TownThreatened(  ) == false ) )) then
        if (target == null) then
            set target = GetCreepCamp( 27, 100, true )
        endif

        // Target Priority #12
    endif
    if (( ( FoodUsed(  ) >= 50 ) and ( TownThreatened(  ) == false ) )) then
        if (target == null) then
            set target = GetCreepCamp( 27, 100, false )
        endif

        // Target Priority #13
    endif
    if (( ( ( FoodUsed(  ) > 44 ) and ( GetUpgradeLevel( 'Ruwb' ) > 0 ) ) and ( TownThreatened(  ) == false ) )) then
        if (target == null) then
            set target = GetCreepCamp( 18, 26, true )
        endif

        // Target Priority #14
    endif
    if (( ( FoodUsed(  ) > 44 ) and ( TownThreatened(  ) == false ) )) then
        if (target == null) then
            set target = GetCreepCamp( 18, 26, false )
        endif

        // Target Priority #15
    endif
    if (( ( ( FoodUsed(  ) > 38 ) and ( GetUpgradeLevel( 'Ruwb' ) > 0 ) ) and ( TownThreatened(  ) == false ) )) then
        if (target == null) then
            set target = GetCreepCamp( 12, 17, true )
        endif

        // Target Priority #16
    endif
    if (( ( FoodUsed(  ) > 38 ) and ( TownThreatened(  ) == false ) )) then
        if (target == null) then
            set target = GetCreepCamp( 12, 17, false )
        endif

        // Target Priority #17
    endif
    if (( ( ( FoodUsed(  ) > 32 ) and ( GetUpgradeLevel( 'Ruwb' ) > 0 ) ) and ( TownThreatened(  ) == false ) )) then
        if (target == null) then
            set target = GetCreepCamp( 7, 11, true )
        endif

        // Target Priority #18
    endif
    if (( ( FoodUsed(  ) > 32 ) and ( TownThreatened(  ) == false ) )) then
        if (target == null) then
            set target = GetCreepCamp( 7, 11, false )
        endif

        // Target Priority #19
    endif
    if (( ( TownThreatened(  ) == false ) and ( GetUpgradeLevel( 'Ruwb' ) > 0 ) )) then
        if (target == null) then
            set target = GetCreepCamp( 0, 6, true )
        endif

        // Target Priority #20
    endif
    if (( TownThreatened(  ) == false )) then
        if (target == null) then
            set target = GetCreepCamp( 0, 6, false )
        endif

        // Target Priority #21
    endif
    if (( ( ( FoodUsed(  ) >= 50 ) and ( GetGold(  ) >= 500 ) ) and ( TownThreatened(  ) == false ) )) then
        if (target == null) then
            call PurchaseZeppelin(  )
            return
        endif

        // Target Priority #22
    endif
    if (( CaptainReadinessHP(  ) >= 50 )) then
        if (target == null) then
            set target = GetEnemyExpansion()
            if (target == null) then
                call StartGetEnemyBase(  )
                loop
                    exitwhen (not WaitGetEnemyBase())
                    call SuicideSleep( 1 )
                endloop
                set target = GetEnemyBase()
            endif
        endif

    endif
    // Attack the target and increment attack wave
    if (target != null) then
        call AttackTarget( target, setAlly )
        call AttackWaveUpdate(  )
    else
        // If no target was found, sleep a bit before trying again
        call Sleep( 20 )
    endif
endfunction

//===========================================================================
// Determines all attacking assignments
//===========================================================================
function AttackAssignment takes nothing returns nothing
    call StaggerSleep( 0, 2 )
    if (attackWave == 1) then
        call AttackWaveDelay( 0 )
    endif
    loop
        loop
            call UpdateConditions(  )
            exitwhen (HaveMinimumAttackers() and not CaptainRetreating())
            call Sleep( 2 )
        endloop
        call RemoveInjuries(  )
        call ResetAttackUnits(  )
        call PrepareForces(  )
        call LaunchAttack(  )
    endloop
endfunction

//***************************************************************************
//*
//*  Main Entry Point
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call InitAI(  )
    call SetPlayerName( ai_player, "Jarman" )
    call InitOptions(  )
    call SelectHeroes(  )
    call CreateCaptains(  )
    call SetHeroLevels( function ChooseHeroSkill )

    call Sleep( 0.1 )
    call StartThread( function WorkerAssignment )
    call StartThread( function AttackAssignment )
    call PlayGame(  )
endfunction

